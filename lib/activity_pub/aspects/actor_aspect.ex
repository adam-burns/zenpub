defmodule ActivityPub.ActorAspect do
  use ActivityPub.Aspect, persistence: ActivityPub.SQLActorAspect

  aspect do
    assoc(:inbox, type: "Collection", functional: true, autogenerated: true)
    assoc(:outbox, type: "Collection", functional: true, autogenerated: true)
    assoc(:following, type: "Collection", functional: true, autogenerated: true)
    assoc(:followers, type: "Collection", functional: true, autogenerated: true)
    assoc(:liked, type: "Collection", functional: true, autogenerated: true)
    field(:preferred_username, :string)
    field(:streams, {:map, :string})
    field(:endpoints, {:map, :string})
  end

  def autogenerate(:inbox, _entity) do
    ActivityPub.new(%{
      type: "Collection"
    })
  end

  def autogenerate(:outbox, _entity) do
    ActivityPub.new(%{
      type: "Collection"
    })
  end

  def autogenerate(:following, _entity) do
    ActivityPub.new(%{
      type: "Collection"
    })
  end

  def autogenerate(:followers, _entity) do
    ActivityPub.new(%{
      type: "Collection"
    })
  end

  def autogenerate(:liked, _entity) do
    ActivityPub.new(%{
      type: "Collection"
    })
  end
end
