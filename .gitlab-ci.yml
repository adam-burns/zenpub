image: elixir:1.9.4-alpine #update this when we switch Elixir version in Dockerfile

variables: 
  POSTGRES_DB: moodle_net_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  DATABASE_HOST: postgres
  MIX_ENV: test
  HOSTNAME: localhost
  
cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - deps
    - _build
    - .pip

stages:
  - build
  - test
  - deploy

before_script:
  - apk add --update --no-cache build-base cmake curl git rust cargo py-pip openrc
  - make manual-deps
  - pip --cache-dir=.pip install -U pip # upgrade pip
  
build:
  stage: build
  script:
    - mix deps.get
    - mix compile --force
    
localisation:  # prepare localisation strings
  stage: test
  script:
    - if [ ! -z "$TX_TOKEN" ]; then pip --cache-dir=.pip install transifex-client ; else echo "Skipping..."; fi # install transifex cli
    - mix gettext.extract # extract strings to be localised
    - if [ ! -z "$TX_TOKEN" ]; then tx push --source --no-interactive ; else echo "Skipping..."; fi # then push latest English PO file to transifex for translators (only need to run this once per new commit)
  only:
  - develop

unit-testing:
  stage: test
  services:
  - name: postgres:9.6.6
    command: ["postgres", "-c", "fsync=off", "-c", "synchronous_commit=off", "-c", "full_page_writes=off"]
  script:
    - mix ecto.create
    - mix ecto.migrate
    - mix test --trace --preload-modules

docs:
  stage: test # deploy documentation (stage should be changed 'deploy' when tests are fixed)
  script:
    - pip --cache-dir=.pip install awscli # Install the AWS SDK for pushing the docs  
    - 'MIX_ENV=dev mix deps.get'
    - MIX_ENV=dev mix docs
    - mv doc public # serve as GitLab Pages artifact
    - aws s3 sync public/ s3://${DOCS_STAGING_BUCKET}/docs/server/ --delete --exclude .git --exclude README.md --acl public-read # also copy docs to S3-served website
    - aws cloudfront create-invalidation --distribution-id ${DOCS_STAGING_DISTRIBUTION_ID} --paths '/docs/server/*' # invalidate CloudFront's cache to serve the new version
  artifacts:
    paths:
    - public
  only:
  - develop

staging:
  stage: test # deploy staging docker image (stage should be changed 'deploy' when tests are fixed)
  script:
    - apk add --no-cache docker
    - rc-update add docker boot
    - sleep 30
    - make build_with_cache
    - make push
  only:
  - develop
